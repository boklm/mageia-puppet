<%-
mirror_root = scope.lookupvar('buildsystem::var::repository::mirror_root')
mirror_reporoot = scope.lookupvar('buildsystem::var::repository::mirror_reporoot')
bootstrap_reporoot = scope.lookupvar('buildsystem::var::repository::bootstrap_reporoot')
distribdir = scope.lookupvar('buildsystem::var::repository::distribdir')
distros = scope.lookupvar('buildsystem::var::distros::distros')
-%>
<VirtualHost *:80>
        ServerName <%= scope.lookupvar('buildsystem::var::repository::hostname') %>
        DocumentRoot <%= mirror_root %>
<%-
    distros.keys.sort.each{|distroname| 
	distro = distros[distroname]
	allow_from = distro['repo_allow_from'] != nil ? distro['repo_allow_from'] : [ 'all' ]
%>
	Alias /bootstrap/<%= distroname %>/ "<%= bootstrap_reporoot %>/<%= distroname %>/"

<%- if distro['no_mirror'] -%>
	Alias /<%= distribdir %>/<%= distroname %>/ "<%= bootstrap_reporoot %>/<%= distroname %>/"
<%- end -%>

	<Directory  <%= bootstrap_reporoot %>/<%= distroname %>>
          Header append Cache-Control "public, must-revalidate"
          Order deny,allow
<%-
        for allow in allow_from do
-%>
          Allow from <%= allow %>
<%-
        end
-%>
          Options Indexes FollowSymLinks
        </Directory>

	<Directory  <%= mirror_reporoot %>/<%= distroname %>>
          Header append Cache-Control "public, must-revalidate"
          Order deny,allow
          Deny from all
<%-
	for allow in allow_from do
-%>
          Allow from <%= allow %>
<%-
        end
-%>
          Options Indexes FollowSymLinks
        </Directory>
<%-
    }
-%>
</VirtualHost>
