<%-
def media_name(media, repo, type, archname)
    name = [ media.capitalize ]
    if archname != nil
	name += [ archname ]
    end
    for r in repo.split('_') do
	name += [ r.capitalize ]
    end
    if type != nil
	name += [ type.capitalize ]
    end
    return name.join(' ')
end

def media_out(name, media_hash)
    media_out = "[%s]\n" % name
    media_hash.keys.sort.each{|key|
	value = media_hash[key]
	if value != nil
	    media_out += "%s=%s\n" % [ key, value ]
	end
    }
    return media_out
end
distro = scope.lookupvar('buildsystem::var::distros::distros')[@distro_name]
-%>
[media_info]
version=<%= distro['version'] %>
mediacfg_version=2
branch=<%= distro['branch'] %>
arch=<%= @arch %>
xml-info=1

<%-
distro['medias'].keys.sort.each{|medianame|
    media = distro['medias'][medianame]
    media['repos'].keys.sort.each{|reponame|
	repo = media['repos'][reponame]
	media_type = []
	if media['media_type'] != nil
	    media_type += media['media_type']
	end
	if repo['media_type'] != nil
	    media_type += repo['media_type']
	end
	noauto=nil
	if (media['noauto'] == '1') or (repo['noauto'] == '1')
	    noauto='1'
	end
	updates_for = nil
	if repo['updates_for'] != nil
	    updates_for = [ medianame, repo['updates_for'] ].join('/')
	end
        -%><%=
	media_out [ medianame, reponame ].join('/'),
	    :hdlists => [ 'hdlist', medianame, reponame ].join('_') + '.cz',
	    :name => media_name(medianame, reponame, nil, nil),
	    :srpms => [ '../../SRPMS', medianame, reponame ].join('/'),
	    :media_type => media_type.join(':'),
	    :media_types => media_type.join(':'),
	    :updates_for => updates_for,
	    :noauto => noauto

        %>
	<%-# debug -%>
	<%-
	debug_media_type = media_type + [ 'debug' ]
	-%><%=
	media_out [ 'debug', medianame, reponame ].join('/'),
	    :hdlists => [ 'hdlist_debug', medianame, reponame ].join('_') + '.cz',
	    :name => media_name(medianame, reponame, 'debug', nil),
	    :srpms => [ '../../SRPMS', medianame, reponame ].join('/'),
	    :media_type => debug_media_type.join(':'),
	    :media_types => debug_media_type.join(':'),
	    :noauto => '1'

	%>
	<%-# source -%>
	<%-
	source_media_type = media_type + [ 'source' ]
	-%><%=
	media_out [ '../../SRPMS', medianame, reponame ].join('/'),
	    :hdlists => [ 'hdlist', medianame, reponame ].join('_') + '.src.cz',
	    :name => media_name(medianame, reponame, 'sources', nil),
	    :rpms => [ medianame, reponame ].join('/'),
	    :media_type => source_media_type.join(':'),
	    :media_types => source_media_type.join(':'),
	    :noauto => '1'

        %>
	<%-# we add 32bit media if arch is x86_64  -%>
	<%- 
	if @arch == 'x86_64' and distro['arch'].include?('i586')
	    medianame32 = [ medianame, '32' ].join('')
	    -%><%=
	    media_out [ '../../i586/media', medianame, reponame ].join('/'),
		:hdlists => [ 'hdlist', medianame32, reponame ].join('_') + '.src.cz',
		:name => media_name(medianame, reponame, nil, '32bit'),
		:media_type => media_type.join(':'),
		:media_types => media_type.join(':'),
		:noauto => noauto

	  %>
	  <%-
	end
    }
}
if distro['based_on'] != nil
    distro['based_on'].keys.sort.each{|bdistroname|
	bdistro = distro['based_on'][bdistroname]
	bdistro.keys.sort.each{|medianame|
	    media = bdistro[medianame]
	    for reponame in media
		-%><%=
		media_out [ bdistroname, medianame, reponame ].join('/'),
		    :hdlists => [ 'hdlist', bdistroname, medianame,
			reponame ].join('_'),
		    :name =>  media_name([ medianame, bdistroname].join(''), reponame, nil, nil),
		    :media_type => 'base_distro',
		    :media_types => 'base_distro',
		    :noauto => 1
		%>
		<%-
	    end
	}
    }
end
-%>
