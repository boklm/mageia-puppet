###
#
# Do not disable the host without appropriate warning
# to somebody able to fix the machine
#
# Please run 'perl -cw .upload.conf' in order to check the file is OK.
#
###

my %nodes = (
    i586 => [ qw(jonund0 ecosse0 rabbit0 sucuk0 jonund1 ecosse1 rabbit1 sucuk1) ],
    x86_64 => [ qw(ecosse0 jonund0 sucuk0 rabbit0 ecosse1 jonund1 sucuk1 rabbit1) ],
);
my $repository = "http://repository.<%= domain %>/distrib/";
my $homedir = "<%= homedir %>";

{
    bot => {
        (map {
            my $arch = $_;
            $arch => {
                map {
                    my $node = $_;
                    ($node => {	       
                        iurt => {
                            user => '<%= login %>',
# (spuk, 2007-08-16) disabled iurt_cache additional media, locks trying to mount -o bind
#                           command => "iurt --copy-srpm --group -v 6 --config local_spool $homedir/iurt/__DIR__ --no_rsync --chrooted-urpmi -m __MEDIA__ -- $repository --additional-media -m __MEDIA__ -- file://$homedir/cache/ -p \"__PACKAGER__\" -r __TARGET__ __ARCH__",
                            command => "iurt --copy_srpm --group --rpmmacros \"%distro_section __SECTION__\" --config local_spool $homedir/iurt/__DIR__ --no_rsync --chrooted-urpmi -m __MEDIA__ -- $repository -p \"__PACKAGER__\" -r __TARGET__ __ARCH__",
                            packages => "$homedir/iurt/",
                        },
                    });
                } @{$nodes{$arch}},
            };
        } keys %nodes),
      },
      media => { 
	    default => { 
		"infra/release" => [ "infra/release", "base/core/updates", "base/core/release" ], 
		"core/release" => [ "core/updates", "core/release" ], 
		"core/updates" => [ "core/updates", "core/release" ],
		"core/updates_testing" => [ "core/updates_testing", "core/updates", "core/release" ],
		"core/backports" => [ "core/backports", "core/updates_testing", "core/updates", "core/release" ],
		"core/backports_testing" => [ "core/backports_testing", "core/backports", "core/updates_testing", "core/updates", "core/release" ],
		"nonfree/release" => [ "core/release", "nonfree/release" ],
		"nonfree/updates" => [ "core/updates", "core/release", "nonfree/release", "nonfree/updates" ],
		"nonfree/updates_testing" => [ "core/updates", "core/release", "core/updates_testing", "nonfree/release", "nonfree/updates", "nonfree/updates_testing" ],
		"nonfree/backports" => [ "core/backports", "core/updates_testing", "core/updates", "core/release",
					 "nonfree/release", "nonfree/updates", "nonfree/updates_testing", "nonfree/backports" ],
		"nonfree/backports_testing" => [ "core/backports_testing", "core/backports", "core/updates_testing", "core/updates", "core/release",
						 "nonfree/release", "nonfree/updates", "nonfree/updates_testing", "nonfree/backports", "nonfree/backports_testing" ],
		"tainted/release" => [ "core/release", "nonfree/release", "tainted/release" ],
		"tainted/updates" => [ "core/release", "nonfree/release", "tainted/release",
				       "core/updates", "nonfree/updates", "tainted/updates" ],
		"tainted/updates_testing" => [ "core/release", "nonfree/release", "tainted/release",
				       "core/updates", "nonfree/updates", "tainted/updates",
				       "core/updates_testing", "nonfree/updates_testing", "tainted/updates_testing" ],
		"tainted/backports" => [ "core/release", "nonfree/release", "tainted/release",
				         "core/updates", "nonfree/updates", "tainted/updates",
				         "core/updates_testing", "nonfree/updates_testing", "tainted/updates_testing",
				         "core/backports", "nonfree/backports", "tainted/backports" ],
		"tainted/backports_testing" => [ "core/release", "nonfree/release", "tainted/release",
				                 "core/updates", "nonfree/updates", "tainted/updates",
				                 "core/updates_testing", "nonfree/updates_testing", "tainted/updates_testing",
				                 "core/backports", "nonfree/backports", "tainted/backports",
				                 "core/backports_testing", "nonfree/backports_testing", "tainted/backports_testing" ],
	    },
      },
      admin => 'mageia-sysadm@mageia.org',
      http_queue => 'http://pkgsubmit.<%= domain %>/uploads',
      upload_user => '<%= sched_login %>',
      email_domain => '<%= domain %>',
}
